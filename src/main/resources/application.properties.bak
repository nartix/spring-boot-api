spring.application.name=appone
spring.devtools.restart.enabled=true
management.endpoints.web.exposure.include=health,info,metrics
spring.profiles.active=dev

logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.security=DEBUG


spring.session.store-type=jdbc

# required for showing 404 page not found
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

spring.security.user.name=user
spring.security.user.password=password


# Session timeout. If a duration suffix is not specified, seconds are used.
server.servlet.session.timeout=1h

# Database schema initialization mode.
spring.session.jdbc.initialize-schema=always
#spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-postgresql.sql
## Name of the database table used to store sessions.
spring.session.jdbc.table-name=spring_session

app.default.timezone=${TIMEZONE}

spring.messages.basename=messages
spring.messages.encoding=UTF-8
#spring.messages.fallback-to-system-locale=false
#spring.mvc.locale=en
#spring.messages.default-locale=en
#spring.mvc.locale-resolver=fixed

spring.jackson.time-zone=UTC
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

spring.data.rest.basePath=/api/v1

# terminal: openssl rand -base64 32
# a secure 32-byte (256-bit) key encoded in base64
# Token validity in milliseconds (e.g., 1 hour)
jwt.token-validity=3600000

spring.cloud.vault.uri=${VAULT_ADDRESS}
spring.cloud.vault.token=${VAULT_TOKEN}
spring.cloud.vault.authentication=token
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=kv
spring.cloud.vault.kv.profiles=dev
spring.cloud.vault.kv.application-name=SPRINGBOOT
spring.cloud.vault.kv.default-context=${spring.cloud.vault.kv.application-name}
#https://github.com/spring-cloud/spring-cloud-vault/issues/464
spring.cloud.vault.generic.default-context=${spring.cloud.vault.kv.application-name}
spring.config.import=vault://,vault://kv/SPRINGBOOT/TEST


# https://stackoverflow.com/questions/68532259/spring-vault-integration-read-secrets-from-multiple-paths
#spring.config.import=vault://,vault://kv/SPRINGBOOT/TEST
#spring.cloud.vault.kv.separator=/
#spring.cloud.vault.kv.profile-separator=/


#server.error.include-message=always
#server.error.include-binding-errors=always


# not working
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=client-id
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={bcrypt}$2a$10$HbY00/u6PlgK1DWXw2yDR.jQ5HB/jbzMVu9AvoYdRQPLGWwivakou
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}password
spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://localhost:8080/login/oauth2/code/oidc-client
spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://localhost:8080/
spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=false






